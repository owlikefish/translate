以下是ECMAScript Overview的正式概览——并非语言的所有部分都被描述到了。此概览不是标准中的一部分。

ECMAScript是基于对象的：由对象提供基本的语言和宿主功能，并且一个ECMAScript程序就是一簇通信中的对象。在ECMAScript中，一个对象就是一个0或更多属性的集合，每个属性都有性质，它们决定了属性如何被使用。比如，当一个属性的写入性质被设成了false，任何执行ECMAScript代码来给属性赋予一个不同的值的企图都会失败。属性是可以存放其他对象、原始值、或者函数的容器。原始值是以下内建类型：undefined、null、布尔、数值、字符串和符号，其中之一的一个成员；对象是内建类型Object中的一个成员；函数是一个可被调用的对象。通过属性和对象关联起来的函数被称为方法。

ECMAScript定义了一个内建对象集，这些内建函数圆了ECMAScript实体的定义。这些内建对象包括全局对象；作为该语言运行时语义基础的对象包括了Object、function、boolean、symbol和各种error对象；代表和操作数学值的对象包括math、number和date；文本处理对象string和regexp；作为值的索引集的包括数组和9个不同的其中元素都有指定的数学数据表示的类型化数组；包括map和set对象的键化集；支持包含JSON对象、ArrayBuffer和DataView的结构化数据的对象;支持包含生成器函数和promise对象的控制抽象的对象；和包含proxy和reflect的反射对象。

ECMAScript还定义了一个内建操作符集。ECMAScript操作符包括了各种一元运算符，多元运算符，加运算符，位移运算符，关系运算符，等值运算符，二进制位运算符，二进制逻辑运算符，赋值运算符，和逗号运算符。

大型ECMAScript程序受模块支持，模块化使程序可以划分成多个语句和声明的序列。每个模块明确标识了它使用的声明需要由其它模块提供，它的哪一个声明可以为其它模块所使用。

ECMAScripty句法有意和Java语法类似。ECMAScript句法宽松到使它能够作为易于使用的脚本语言来服务。比如说，一个变量既不需要有类型声明，也不是与属性关联的类型，并且，定义的函数并不需要有函数声明在文本上出现在调用它的位置之前。
